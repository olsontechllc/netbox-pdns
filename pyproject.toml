[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "netbox-pdns"
version = "0.2.0"
description = "A high-performance, enterprise-grade connector that synchronizes DNS zones between Netbox DNS and PowerDNS Authoritative servers with advanced security, reliability, and monitoring features."
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [
    {name = "Isaiah Olson", email = "isaiah@olson-network.com"},
]
keywords = ["netbox", "powerdns", "dns", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: Name Service (DNS)",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "fastapi[standard]>=0.115.5",
    "pydantic>=2.11.3",
    "pydantic-settings>=2.6.1",
    "apscheduler>=3.11.0",
    "pynetbox>=7.4.1",
    "dnspython>=2.7.0",
    "urllib3>=1.25.3,<3.0.0",
    "python-dateutil>=2.8.2",
    "typing-extensions>=4.7.1",
    "paho-mqtt>=2.0.0",
    "pdns-auth-client @ git+https://github.com/insignia96/pdns-auth-client@c2ced5b9234e6bd732553b185a8168f28a52995d",
    "slowapi>=0.1.9",
]

[project.urls]
"Homepage" = "https://github.com/olsontechllc/netbox-pdns"

[project.scripts]
netbox-pdns = "netbox_pdns.__main__:main"

# Documentation build scripts
mkdocs-serve = "mkdocs:serve"
mkdocs-build = "mkdocs:build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["netbox_pdns"]

[tool.ruff]
# Target Python version
target-version = "py311"
# Line length
line-length = 100
# Excluded files
exclude = [
    "pdns_auth_client/"
]

[tool.ruff.lint]
# Select rules to enable
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "ASYNC", # flake8-async
    "S",   # flake8-bandit
    "ERA",  # eradicate
]
# Rules to ignore
ignore = []

# Allow imports to be sorted automatically
[tool.ruff.lint.isort]
known-third-party = ["pynetbox", "pdns_auth_client", "apscheduler", "dns"]

# Per-directory rule configuration
[tool.ruff.lint.per-file-ignores]
# Ignore specific rules in test files
"tests/**/*.py" = [
    "S101",  # Use of assert detected
    "S104",  # Possible binding to all interfaces
    "S106",  # Possible hardcoded password
]

# Enable auto-fixing
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
exclude = [
    "pdns_auth_client/"
]

[[tool.mypy.overrides]]
module = [
    "pynetbox.*",
    "pdns_auth_client.*",
    "apscheduler.*",
    "dns.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--cov=netbox_pdns --cov-report=term-missing"
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as async",
]

[dependency-groups]
dev = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.18",
    "mkdocstrings>=0.30.0",
    "mkdocstrings-python>=1.18.2",
    "pymdown-extensions>=10.16.1",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-asyncio>=0.25.0",
    "ruff>=0.5.0",
    "mypy>=1.15.0",
]
